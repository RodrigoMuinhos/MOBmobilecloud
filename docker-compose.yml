services:
  db:
    image: postgres:16-alpine
    container_name: mobsupply_db
    environment:
      POSTGRES_DB: mobsupply
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mobsupply"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped
    # Se quiser acessar do host (DBeaver), descomente:
    # ports:
    #   - "5432:5432"

  api:
    build:
      context: .
      dockerfile: docker/api.dockerfile
    container_name: mobsupply_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3333
      # Postgres dentro da rede do compose
      DATABASE_URL: postgresql://postgres:postgres@db:5432/mobsupply?schema=public
      # Libera Vite 5173/5174 no host e no IP da sua LAN
      CORS_ORIGIN: >
        http://localhost:5173,
        http://localhost:5174,
        http://localhost:8080,
        http://192.168.40.139:5173,
        http://192.168.40.139:5174,
        http://192.168.40.139:8080
      JWT_SECRET: rodrigo123
    volumes:
      - ./backend/uploads:/app/backend/uploads
    ports:
      - "3333:3333"     # <— API acessível no host
    command: >
      sh -c "
        npx prisma migrate deploy &&
        node dist/server.js
      "
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3333/api/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 12
    restart: unless-stopped

  # web:  # (não usado na Opção 1 — front roda com Vite local)
  #   build:
  #     context: .
  #     dockerfile: docker/web.dockerfile
  #     args:
  #       VITE_API_URL: /api
  #   container_name: mobsupply_web
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   ports:
  #     - "8080:80"    # só deixe isso se quiser testar o build do front via Nginx
  #   restart: unless-stopped

volumes:
  db-data:
