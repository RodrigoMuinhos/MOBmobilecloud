# fora do server{} (http context)
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  gzip on;
  gzip_types
    text/plain
    text/css
    application/json
    application/javascript
    application/octet-stream
    image/svg+xml
    font/woff
    font/woff2;
  client_max_body_size 20m;

  # assets: cache forte
  location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
    expires 7d;
    access_log off;
    try_files $uri =404;
  }

  # SPA (não cachear o HTML)
  location = /index.html {
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    try_files $uri =404;
  }

  # SPA fallback
  location / {
    try_files $uri $uri/ /index.html;
  }

  # proxy p/ API (service 'api' do docker compose)
  location /api/ {
    proxy_pass http://api:3333;   # sem barra final -> mantém /api no path
    proxy_http_version 1.1;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;

    proxy_connect_timeout 10s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;
    send_timeout          60s;

    proxy_redirect off;
  }

  # proxy p/ uploads estáticos do backend
  location /uploads/ {
    proxy_pass http://api:3333;   # backend já serve /uploads
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
